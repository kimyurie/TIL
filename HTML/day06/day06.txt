
div 구조잡기 ********완전 증요!!
CSS 적용방법
    - 인라인
    - 내부
    - 외부
선택자
    - 전체
    - 태그
    - id / class
    : id?
        아이디는 중복이 안됨 '특정한 부분'
        선택자로 구분할 때 #으로 구분

    : class
        클래스는 중복이 가능 '특정 집단'
        선택자로 구분할 때 .으로 구분

    => id/class 속성을 부여할 때(이름을 지어줄 때)?
        * 가독성 (중복되면 안됌, 기능, 남들이 봤을 때 이해할 수 있느냐)
    
    <       속성 = "속성값" > </ >
    ex) <div id="1oginInput">...</div>
    ex) <input placeholder = "아이디를 입력해주세요"/>



    Emment    ----> 축약형(단축키)
        div#login
        => <div id="login"></div>

----------------------------------------------------------------------------

    그룹선택자

        선택자1, 선택자2{
            ...CSS 문법
        }

        ex)
        p{color:red}
        div{color:red} -- (x)

        p, div{color: red} -- (o)

----------------------------------------------------------------------------

    
    * CSS의 가족

        HTML 가족 관계
            <wdiv> ................ 부모
                <div></div> .. 자식
            </wdiv>

            ex)
            <부모>
                --- <부모>태그 안의 모든 태그는 자손관계

                <자식> ---- 자식 또한 손자에게는 부모관계
                    <손자>
                        ..................
                    </손자>
                </자식>
                <자식></자식> -------- 첫번째 자식과 두번째 자식은 형제관계
                <자식></자식>
                <자식></자식>
                <자식></자식>
                <자식></자식>
                <자식></자식>
            </부모>

        자식 선택자
            부모 요소의 하위 자식 요소에만 스타일을 적용하는 방법
        
            부모선택자 > 자식선택자{
                ... CSS 문법
            }

            ex)
            div > p { //div태그 바로 밑의 p태그에만 스타일을 적용시켜줘
                color: red
            }


        자손 선택자
            부모 요소의 하위의 모든 요소(태그)에 스타일을 적용하는 방법
            자손에는 자식, 손자, 후손 요소(태그)를 모두 포함

                조상요소선택자 자손요소선택자{
                    ... CSS 문법
                }

            ex)
                div p{ //div태그 밑의 모든 p태그에 스타일을 적용시켜줘
                    color: red
                }

            ex)

                div > p span{ // div 바로 밑의 p의 span에 바로 적용
                    color: red
                }

                #header > div ul > li#login{ //아이디가 헤더인 바로 아래 div영역 안에 있는 ul들 안에 있는 li중에서 아이디가 로그인인것에 적용

                    color: red
                }

-----------------------------------------------------------------

                <div id="header">
                        <div>
                            <ul></ul>
                            <div>
                                <ul>
                                    <ul></ul>
                                    <ul></ul>
                                </ul>
                            </div>
                        </div>  ------------> #header > div ul 까지 ul태그는 총 4개
                        <div>
                            <ul></ul>
                            <ul></ul>
                        <div>
                        <div>
                        <div>
                        <ul></ul>    ----------> 만약 #header > ul이면 ul태그는 총 7개
                </div>

-----------------------------------------------------------------

                ====> 
                1. 명확한 대상을 지명해서 CSS 우선순위 높일 수 있다.
                2. 어떠한 요소가 어디에 있든 내가 불러올 수 있다. 


        형제 선택자
            - 일반 형제
                형제 관계를 갖는 요소 중에 형 요소 다음에 나오는 <모든>
                동생 요소를 선택해 스타일을 적용하는 방법

                형선택자 ~ 동생 선택자{
                    ... CSS문법
                }

                ex) a ~ li {
                    (앞에 a태그가 있는 모든 li태그 선택)
                    ...CSS문법
                    }

                <ul> 
                    <li>
                    <a>
                    <li>
                    <li>
                    <li>
                </ul>
                
            - 인접 형제
                
                형 선택자 + 동생 선택자 {
                    ... CSS문법
                }

                ex) a + li {
                    (앞에 a태그가 있는 가장 가까운 동생 li 태그만 선택)
                }



----------------------------------------------------------------------------
            => 왜 가족선택자가 있을까?
                3. 중복된 CSS를 제거할 수 있다, 코드가 길어지는 것을 방지




-----------------------------------------------------------------

                <body>
                    <div id="Wrapper">
                        <div class="content">
                            안녕하세요
                                    <div class = "content_2"></div>
                        </div>
                    </div>

                body > #Wrapper > .content {          -----> 복잡하므로 굳이 이렇게 쓸 필요x
                    color: red
                }               

                .content > div red {              ----> 간단하므로 이렇게 쓰면 됌!
                    color: red
                }

-----------------------------------------------------------------

<div class = "contentBox">
    <div class = "contentBox">
    </div>
    <div>
    <div>
    <div>
</div>

-----------------------------------------------------------------

    속성선택자
        HTML 요소에 src, href, type, name 등과 같은 다양한 속성을
        선택자로 지정해서 스타일을 적용하는 방법

        1. 속성을 가지고 있는지 확인한 요소
        [속성명]{
            CSS문법
        }

        2. 특정 속성에 특정 속성 값이 있는 요소를 선택
        [속성명='속성값']{
            CSS문법
        }

        ex)
        [href]{
            color:red
        }


        ex)
        [href="https://www.naver.com"]{
            color: blue
        }

    속성 선택자 심화      /* 복습 굳이 안해도 됌 */

        [속성명 = "속성값"] : 속성값이 완벽히 일치한 경우
        [속성명 ~= "속성값"] : 값이 속성값과 다른 값이 띄어쓰기로 구성
        [속성명 *= "속성값"] : 속성값이 포함된 문자를 가지고 있는 요소
        [속성명 $= "속성값"] : 속성값이 접미사로 끝나는 요소를 선택
        [속성명 ^= "속성값"] : 속성값이 접두사로 시작하는 요소를 선택
        [속섬영 |= "속성값"] : 속성값이 완벽히 일치하거나, 접두사로 존재하는 '-'으로
                            연결된 요소를 선택


        ex)
        [name ^="apple"]{
            ...CSS문법
        }

        input name="apple"
        input name="appleHouse"

-----------------------------------------------------------------

    가상 클래스 선택자


    가상 요소 선택자

-----------------------------------------------------------------

    금주의 조별활동 및 과제관련

    한페이지의 div 구조를 잡기
    단 class명과 id명을 주어주면서 (가독성과 중복 신경쓰면서)


    조별: 각자 코드 리뷰 (내 코드가 이해 되는지 물어보기) + 제일 잘된거 조장 단톡방 전송


    + 선택자 문제내기(조별인분들은 돌아가면서)
    
-----------------------------------------------------------------

    